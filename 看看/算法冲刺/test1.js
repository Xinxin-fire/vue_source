// 组合问题
// 1.不可重复不可复选
// 2.可重复不可复选
// 3.不可重复可复选

// 排列组合问题本质是回溯问题，利用回溯将每次的选择组成一个多叉树，再利用题目的限制条件对回溯进行剪枝，最后输出最终的结果

// 子集 不可重复不可复选 利用一个临时数组在前序位置把每个节点的路径值收集起来，通过固定元素的相对位置保证不出现重复的子集
// 组合 不可重复不可复选 和上面代码基本一致只需要控制代码的层数即可
// 全排列 不可重复不可复选 利用map标记已经使用过的元素，避免重复使用

// 子集2 可重复不可复选 对数组进行排序，在遍历第二次时判断当前元素和其前一个元素是否相等，相等则跳过
// 组合总和2 可重复不可复选 和上述代码基本相同，只多了一个子集求和的操作
// 全排列2 可重复不可复选 排序数组，使用used标记已经使用过的元素，对于重复的元素，通过保证元素的顺序不变来进行去重，例如i和i-1两个元素， 如果i-1没有使用过,i元素一定没有被使用，通过!used[i-1]可以去重

// 组合总和 不重复可复选 让一个元素可重复使用则将下一轮的起始索引由i+1调整为i即可